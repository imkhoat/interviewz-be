version: '3.8'

services:
  api:
    build:
      context: .
      target: production
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-admin}
      - DB_PASS=${DB_PASS:-admin}
      - DB_NAME=${DB_NAME:-interviewz}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:4000}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - interviewz-network
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASS:-admin}
      - POSTGRES_DB=${DB_NAME:-interviewz}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - interviewz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-interviewz}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  interviewz-network:
    driver: bridge 